// Copyright (c) 2024 Nordic Semiconductor ASA
// SPDX-License-Identifier: Apache-2.0

/dts-v1/;
#include <nordic/nrf52833_qiaa.dtsi>


/ {
	model = "gtfog";
	compatible = "agh,gtfog";

	chosen {
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,code-partition = &slot0_partition;
	};

	pwmleds {
		compatible = "pwm-leds";
		led_r: led_r {
			pwms = <&pwm0 0 PWM_MSEC(1) PWM_POLARITY_INVERTED>;
		};

		led_g: led_g {
			pwms = <&pwm0 1 PWM_MSEC(1) PWM_POLARITY_INVERTED>;
		};

		led_b: led_b {
			pwms = <&pwm0 2 PWM_MSEC(1) PWM_POLARITY_INVERTED>;
		};

		fan: fan_control {
			pwms = <&pwm0 3 PWM_MSEC(5) PWM_POLARITY_NORMAL>;
		};

		strobe: led_strobe {
			pwms = <&pwm1 0 PWM_MSEC(1) PWM_POLARITY_NORMAL>;
		};
	};



	buttons {
		compatible = "gpio-keys";
		button_minus: button0 {
			label = "Minus button";
			gpios = <&gpio0 15 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
		};

		button_plus: button1{
			label = "Plus button";
			gpios = <&gpio0 17 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
		};
	};

	zephyr,user {
		accelerometer_pwr-gpios = <&gpio1 9 0>;
		charger_stat1-gpios = <&gpio0 3 GPIO_PULL_UP>;
		charger_stat2-gpios = <&gpio0 2 GPIO_PULL_UP>;
		accelerometer_interrupt1-gpios = <&gpio0 5 0>;
		accelerometer_interrupt2-gpios = <&gpio0 4 0>;
	};
};


&gpiote {
	status = "okay";
};

&gpio0 {
	status = "okay";
};


&gpio1 {
	status = "okay";
};



&flash0 {
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		boot_partition: partition@0 {
			label = "mcuboot";
			reg = <0x0 0xc000>;
		};
		slot0_partition: partition@c000 {
			label = "image-0";
			reg = <0xc000 0x32000>;
		};
		slot1_partition: partition@3e000 {
			label = "image-1";
			reg = <0x3e000 0x32000>;
		};
		scratch_partition: partition@70000 {
			label = "image-scratch";
			reg = <0x70000 0xa000>;
		};
		storage_partition: partition@7a000 {
			label = "storage";
			reg = <0x7a000 0x6000>;
		};
	};
};



&i2c0 {
	status = "okay";
	clock-frequency = <I2C_BITRATE_STANDARD>;
	pinctrl-0 = <&i2c0_default>;
	pinctrl-1 = <&i2c0_sleep>;
	pinctrl-names = "default", "sleep";
	accelerometer: adxl345@53 {
		compatible = "adi,adxl345";
		reg = <0x53>;
		status = "okay";
		// supply-gpios = <&gpio1 9 0>;
		// zephyr,deferred-init;
	};
};



&pwm0 {
	status = "okay";
	pinctrl-0 = <&pwm0_default>;
	pinctrl-1 = <&pwm0_sleep>;
	pinctrl-names = "default", "sleep";
};


&pwm1 {
	status = "okay";
	pinctrl-0 = <&pwm1_default>;
	pinctrl-1 = <&pwm1_sleep>;
	pinctrl-names = "default", "sleep";
};


&usbd {
	status = "okay";
};


&adc {
	status = "okay";
	io-channels = <&adc 0>, <&adc 4>;
	io-channel-names = "vdd", "vbat";

	status = "okay";
	#address-cells = <1>;
	#size-cells = <0>;
	channel@0 {
		reg = <0>;
		zephyr,gain = "ADC_GAIN_1_2";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,input-positive = <NRF_SAADC_VDDHDIV5>; /* P0.30 */
		zephyr,resolution = <12>;
	};
	
	channel@4 {
		reg = <4>;
		zephyr,gain = "ADC_GAIN_1_6";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,input-positive = <NRF_SAADC_AIN4>; /* P0.28 */
		
		zephyr,resolution = <12>;
	};
};





&pinctrl {
	pwm0_default: pwm0_default {
		group1 {
			psels = <NRF_PSEL(PWM_OUT3, 0, 11)>;
		};

		group2 {
			psels = <NRF_PSEL(PWM_OUT0, 0, 31)>,
			        <NRF_PSEL(PWM_OUT1, 0, 30)>,
			        <NRF_PSEL(PWM_OUT2, 0, 29)>;
			nordic,invert;
		};
	};

	pwm0_sleep: pwm0_sleep {
		group1 {
			psels = <NRF_PSEL(PWM_OUT0, 0, 31)>,
			        <NRF_PSEL(PWM_OUT1, 0, 30)>,
			        <NRF_PSEL(PWM_OUT2, 0, 29)>,
			        <NRF_PSEL(PWM_OUT3, 0, 11)>;
			low-power-enable;

		};
	};

	i2c0_default: i2c0_default {

		group2 {
			psels = <NRF_PSEL(TWIM_SCL, 0, 0)>, <NRF_PSEL(TWIM_SDA, 0, 1)>;
			bias-pull-up;

		};
	};
	i2c0_sleep: i2c0_sleep {
		group1 {
			psels = <NRF_PSEL(TWIM_SCL, 0, 0)>, <NRF_PSEL(TWIM_SDA, 0, 1)>;
			bias-pull-up;
			low-power-enable;
		};
	};

	pwm1_default: pwm1_default {
		group1 {
			psels = <NRF_PSEL(PWM_OUT0, 0, 20)>;
		};
	};

	pwm1_sleep: pwm1_sleep {
		group1 {
			psels = <NRF_PSEL(PWM_OUT0, 0, 20)>;
			low-power-enable;
		};
	};
};

